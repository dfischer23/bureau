# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-15 19:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=200, verbose_name='Straße')),
                ('postal_code', models.CharField(blank=True, max_length=200, verbose_name='PLZ')),
                ('city', models.CharField(blank=True, max_length=200, verbose_name='Ort')),
                ('alternative', models.CharField(blank=True, max_length=1000, verbose_name='Alternativ')),
                ('country', models.CharField(blank=True, max_length=200, verbose_name='Land')),
            ],
            options={
                'ordering': ['city', 'street'],
                'verbose_name': 'Postadresse',
                'verbose_name_plural': 'Postadressen',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('first_name', models.CharField(blank=True, max_length=200, verbose_name='Vorname')),
                ('kind', models.CharField(choices=[('oth', 'Andere'), ('prs', 'Person'), ('com', 'Firma'), ('org', 'Organisation/Amt/etc')], max_length=3, verbose_name='Art')),
                ('is_teammember', models.BooleanField(default=False, verbose_name='Teammitglied')),
                ('phone_number', models.CharField(blank=True, max_length=64, verbose_name='Festnetz')),
                ('cellphone_number', models.CharField(blank=True, max_length=64, verbose_name='Mobil')),
                ('email_address', models.CharField(blank=True, max_length=128, verbose_name='EMail')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Address', verbose_name='Postadresse')),
            ],
            options={
                'ordering': ['name', 'first_name'],
                'verbose_name': 'Kontakt',
                'verbose_name_plural': 'Kontakte',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Inhalt')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Datum')),
                ('archived', models.BooleanField(default=False, verbose_name='Archiviert')),
            ],
            options={
                'verbose_name': 'Notiz',
                'verbose_name_plural': 'Notizen',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_nr', models.IntegerField(blank=True, null=True, verbose_name='Eingangsnummer')),
                ('status', models.CharField(blank=True, choices=[('active', 'Active Student'), ('alumnus', 'Alumnus'), ('waitlisted', 'Warteliste'), ('intent_declared', 'Declaration of Intent'), ('rejected', 'rejected'), ('applied', 'Bewerbung erhalten'), ('admission_dialog', 'in Admission Dialog'), ('sitting', 'sitting in')], max_length=20, null=True, verbose_name='Status')),
                ('short_name', models.CharField(max_length=100, verbose_name='Rufname')),
                ('name', models.CharField(max_length=200, verbose_name='Nachname')),
                ('first_name', models.CharField(max_length=200, verbose_name='Vorname')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Geburtsdatum')),
                ('pob', models.CharField(blank=True, max_length=200, null=True, verbose_name='Geburtsort')),
                ('gender', models.CharField(blank=True, choices=[('m', 'männlich'), ('f', 'weiblich'), ('__', 'anderes/ohne Angabe')], max_length=2, null=True, verbose_name='Geschlecht')),
                ('denomination', models.CharField(blank=True, max_length=200, null=True, verbose_name='Religionszugehörigkeit')),
                ('citizenship', models.CharField(blank=True, max_length=200, null=True, verbose_name='Staatsbürgerschaft')),
                ('first_enrollment', models.IntegerField(blank=True, null=True, verbose_name='Erste Einschulung')),
                ('level_ofs', models.IntegerField(blank=True, null=True, verbose_name='Klassenstufe (bei Referenz)')),
                ('level_ref', models.IntegerField(blank=True, null=True, verbose_name='Klassenstufen-Referenz')),
                ('contract_nr', models.IntegerField(blank=True, null=True, verbose_name='Contract #')),
                ('privacy_policy_agreement', models.NullBooleanField(verbose_name='Datenschutzerklärung')),
                ('vaccination_policy_agreement', models.NullBooleanField(verbose_name='Infektionsschutzgesetz')),
                ('is_sibling', models.NullBooleanField(verbose_name='Geschwisterkind')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Address', verbose_name='Postadresse')),
                ('guardians', models.ManyToManyField(blank=True, related_name='students', to='people.Contact', verbose_name='Erziehungsberechtigte')),
            ],
            options={
                'ordering': ['name', 'first_name'],
                'verbose_name': 'SchülerIn',
                'verbose_name_plural': 'SchülerInnen',
            },
        ),
        migrations.AddField(
            model_name='note',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Student', verbose_name='SchülerIn'),
        ),
    ]
